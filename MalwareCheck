# Powershell script to check for supicious patterns.
function Analyze-ScriptForMalware {
    param (
        [string]$ScriptPath
    )

    # Load the script content
    $scriptContent = Get-Content -Path $ScriptPath -Raw

    # Patterns to look for (add more patterns as needed)
    $suspiciousPatterns = @(
        "Invoke-WebRequest",     # Downloads from external sources
        "IEX",                   # Invoke-Expression (commonly used in malicious scripts)
        "[System.Net.WebClient]",# Used for downloading files
        "Base64",                # Encoded commands often use Base64
        "-enc",                  # Encoded command flag
        "New-Object Net.WebClient",
        "Add-MpPreference",      # Manipulates Windows Defender settings
        "Set-MpPreference",
        "Start-Process"          # Launches processes
    )

    $malwareIndicators = @()

    # Check for suspicious patterns
    foreach ($pattern in $suspiciousPatterns) {
        if ($scriptContent -match $pattern) {
            $malwareIndicators += $pattern
        }
    }

    # Check for encoded strings (Base64)
    if ($scriptContent -match "([A-Za-z0-9+/=]{40,})") {
        $malwareIndicators += "Encoded Base64 String"
    }

    if ($malwareIndicators.Count -gt 0) {
        Write-Host "Potential Malware Indicators found in $ScriptPath:" -ForegroundColor Yellow
        foreach ($indicator in $malwareIndicators) {
            Write-Host "- $indicator" -ForegroundColor Red
        }
    } else {
        Write-Host "No Malware Indicators found in $ScriptPath" -ForegroundColor Green
    }
}

# Path to directory containing PowerShell scripts
$directoryPath = "C:\Path\To\Scripts"

# Get all PowerShell scripts in the directory
$scripts = Get-ChildItem -Path $directoryPath -Filter *.ps1

# Analyze each script
foreach ($script in $scripts) {
    Write-Host "Analyzing script: $($script.FullName)" -ForegroundColor Cyan
    Analyze-ScriptForMalware -ScriptPath $script.FullName
    Write-Host "-------------------------------------------`n"
}
